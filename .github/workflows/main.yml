name: Deploy to ECS 

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: Login to AWS ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w1z3j7x7
        docker build -t react-repo .
        docker tag react-repo:latest public.ecr.aws/w1z3j7x7/react-repo:latest
        docker push public.ecr.aws/w1z3j7x7/react-repo:latest
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Update AWS CLI
      run: |
       sudo apt-get install -y python3-pip
       pip3 install --upgrade awscli



    - name: Build Docker image
      run: docker build -t react-repo/react-app:latest .

    - name: Tag Docker image
      run: docker tag react-repo/react-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-repo/react-app:latest

    - name: Push Docker image to ECR
      run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-repo/react-app:latest

    - name: Initialize and Apply Terraform
      run: |
        terraform init
        terraform apply -auto-approve

    - name: Clean up
      run: terraform destroy -auto-approve
